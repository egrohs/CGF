/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //id 'java'
    id("io.freefair.lombok") version "8.14.2"
    // id 'org.springframework.boot' version '3.5.5'
    // id 'io.spring.dependency-management' version '1.1.7'
}

group = 'aplicacao'
version = '0.0.1-SNAPSHOT'
description = 'Jogo de Escova'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(project(":app"))
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//TODO ideal é não ter dependência direta do libgdx, mas sim via o projeto app
    implementation 'com.badlogicgames.gdx:gdx:1.12.1'
    // This dependency is used by the application.
    //implementation libs.guava

    // implementation("org.springframework.boot:spring-boot-starter-web:3.5.5")
    // implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

//application {
    // Define the main class for the application.
//    mainClass = 'asd.App'
//}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
